# Generated by Django 5.0.6 on 2024-07-31 17:57

import cloudinary.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import djangopwa.cloudinary
import djangopwa.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(choices=[('NEQUI', 'Nequi'), ('BANCOLOMBIA', 'Bancolombia'), ('DAVIPLATA', 'Daviplata')], max_length=20, verbose_name='Nombre del banco')),
                ('account_name', models.CharField(max_length=200, verbose_name='Nombre de cuenta')),
                ('account_reference', models.BigIntegerField(verbose_name='Referencia de cuenta')),
                ('email', models.EmailField(max_length=254, verbose_name='Corre electronico')),
                ('phone_number', models.BigIntegerField(verbose_name='Numero telefonico')),
                ('address_ubication', models.CharField(max_length=200, verbose_name='Direccion')),
            ],
            options={
                'verbose_name': 'Cuenta bancaria',
                'verbose_name_plural': 'Cuentas bancarias',
            },
        ),
        migrations.CreateModel(
            name='Lottery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nombre de rifa')),
                ('description', models.TextField(verbose_name='descripcion')),
                ('lottery_date_1', models.DateTimeField(verbose_name='Fecha de juego 1')),
                ('lottery_date_2', models.DateTimeField(verbose_name='Fecha de juego 2')),
                ('lottery_date_3', models.DateTimeField(verbose_name='Fecha de juego 3')),
                ('lottery_date_4', models.DateTimeField(verbose_name='Fecha de juego 4')),
                ('price_per_ticket', models.IntegerField(verbose_name='precio por boleta')),
                ('lower_series_range', models.IntegerField(verbose_name='Numero inicial')),
                ('upper_series_range', models.IntegerField(verbose_name='Ultimo numero')),
            ],
            options={
                'verbose_name': 'Rifa',
                'verbose_name_plural': 'Rifas',
            },
        ),
        migrations.CreateModel(
            name='PaymentContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=32, verbose_name='Nombre de contacto')),
                ('whatsapp', models.CharField(default='', max_length=32, verbose_name='Whatsapp')),
                ('email', models.CharField(default='', max_length=32, verbose_name='Email')),
            ],
            options={
                'verbose_name': 'Contacto de pago',
                'verbose_name_plural': 'Contactos de pago',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
            ],
            options={
                'verbose_name': 'Metodo de pago',
                'verbose_name_plural': 'Metodos de pago',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('VENDEDOR', 'Vendedor'), ('SUPERADMIN', 'Super Admin')], max_length=20, verbose_name='Rol')),
                ('document_number', models.CharField(max_length=50, verbose_name='NÃºmero de documento')),
                ('city_residence', models.CharField(max_length=32, verbose_name='Ciudad')),
                ('whatsapp', models.CharField(max_length=15)),
                ('is_staff', models.BooleanField(default=True, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Vendedor',
                'verbose_name_plural': 'Vendedores',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClientInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Nombres')),
                ('lastname', models.CharField(max_length=32, verbose_name='Apellidos')),
                ('whatsapp', models.IntegerField()),
                ('document_number', models.IntegerField(verbose_name='Numero de documento')),
                ('telephone', models.IntegerField(verbose_name='Numero de telefono')),
                ('city', models.CharField(max_length=32, verbose_name='Ciudad de residencia')),
                ('seller', models.ForeignKey(default=djangopwa.models.get_default_seller, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Vendedor')),
                ('lottery_to_buy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='djangopwa.lottery', verbose_name='Rifa a comprar')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
            },
        ),
        migrations.CreateModel(
            name='LotteryMultimedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('multimedia', cloudinary.models.CloudinaryField(max_length=255, validators=[djangopwa.cloudinary.file_validation], verbose_name='foto/video')),
                ('lottery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djangopwa.lottery')),
            ],
            options={
                'verbose_name': 'multimedia',
                'verbose_name_plural': 'multimedias (imagenes/videos)',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(verbose_name='Cantidad')),
                ('date', models.DateTimeField(verbose_name='Fecha de Pago')),
                ('payment_type', models.CharField(choices=[('BONO1', 'Abono 1'), ('BONO2', 'Abono 2'), ('BONO3', 'Abono 3'), ('TOTAL', 'Pago Total')], max_length=5, verbose_name='Tipo de Pago')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='djangopwa.clientinfo')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seller', to=settings.AUTH_USER_MODEL, verbose_name='vendedor')),
                ('payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='djangopwa.paymentmethod', verbose_name='Metodo de Pago')),
            ],
            options={
                'verbose_name': 'Pago',
                'verbose_name_plural': 'Pagos',
            },
        ),
        migrations.CreateModel(
            name='SellerBill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generation_date', models.DateTimeField(verbose_name='fecha de generacion')),
                ('total_amount', models.IntegerField(verbose_name='total')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='vendedor')),
            ],
            options={
                'verbose_name': 'Factura Vendedor',
                'verbose_name_plural': 'Facturas de Vendedores',
            },
        ),
        migrations.CreateModel(
            name='ClientTicketPaymentBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_id', models.IntegerField(verbose_name='id cliente')),
                ('ticket_number', models.IntegerField(verbose_name='numero de boleta')),
                ('total_amount', models.IntegerField(verbose_name='cantidad de pago total')),
                ('last_payment_date', models.DateTimeField(verbose_name='fecha ultimo pago')),
                ('seller_bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djangopwa.sellerbill', verbose_name='factura vendedor')),
            ],
            options={
                'verbose_name': 'Balance de pago',
                'verbose_name_plural': 'Balances de pago',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='numero')),
                ('state', models.IntegerField(choices=[(1, 'Disponible'), (2, 'Reservada'), (3, 'Comprada')], default=1, verbose_name='estado')),
                ('lottery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djangopwa.lottery', verbose_name='rifa')),
            ],
            options={
                'verbose_name': 'Boleta',
                'verbose_name_plural': 'Boletas',
            },
        ),
        migrations.AddField(
            model_name='clientinfo',
            name='ticket_number',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='djangopwa.ticket', verbose_name='Numero de rifa'),
        ),
        migrations.CreateModel(
            name='TicketAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_number', models.IntegerField(verbose_name='desde')),
                ('end_number', models.IntegerField(verbose_name='hasta')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='asignado a')),
                ('lottery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djangopwa.lottery', verbose_name='rifa')),
            ],
            options={
                'verbose_name': 'Asignar boleta',
                'verbose_name_plural': 'AsignaciÃ³n boletas',
            },
        ),
        migrations.CreateModel(
            name='TicketPurchased',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchased_reference', models.CharField(max_length=200, verbose_name='Referencia de compra')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djangopwa.ticket', verbose_name='Boleta')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djangopwa.clientinfo', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Boleta comprada',
                'verbose_name_plural': 'Boletas compradas',
            },
        ),
        migrations.CreateModel(
            name='TicketReserved',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expiration', models.DateTimeField(verbose_name='Fecha de expiracion')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djangopwa.ticket', verbose_name='Boleta')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djangopwa.clientinfo', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Boleta reservada',
                'verbose_name_plural': 'Boletas reservadas',
            },
        ),
    ]
